<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 3827 Maintainer: takagi Status: ready -->
<sect1 id="advanced.features.streams">
 <title>ストリーム</title>
 <para>
  PHP のストリームを、テンプレートリソースあるいは変数リソースとして使うことができます。
  この構文は、昔ながらのテンプレートリソース名と同じです。
 </para>
 <para>
   Smarty は、まず最初に登録済みのテンプレートリソースを探します。
   見つからない場合は、PHP のストリームが存在するかどうかをチェックします。
   ストリームが存在する場合は、Smarty はそれを使ってテンプレートを取得します。
   <note><para>さらに、セキュリティを有効にすれば、使えるストリームを制限することもできます。</para></note>
 </para>
 <example>
  <title>PHP からのストリーム</title>
  <para>PHP のストリームを、テンプレートリソースとして display() 関数から使います。</para>
  <programlisting>
<![CDATA[
$smarty->display('foo:bar.tpl');
]]>
  </programlisting>
</example>
<example>
  <title>テンプレートからのストリーム</title>
   <para>PHP のストリームを、テンプレートリソースとしてテンプレート内から使います。</para>
   <programlisting>
<![CDATA[
{include file="foo:bar.tpl"}
]]>
  </programlisting>
</example>
<para>
ストリームを使って変数をコールすることもできます。
<emphasis>{$foo:bar}</emphasis> は、<emphasis>foo://bar</emphasis> ストリームを使ってテンプレート変数を取得します。
</para>
<example>
  <title>ストリーム変数</title>
   <para>PHP のストリームを、テンプレート変数リソースとしてテンプレート内から使います。</para>
   <programlisting>
<![CDATA[
{$foo:bar}
]]>
  </programlisting>
</example>
 <para>
  <link linkend="template.resources"><varname>テンプレートリソース</varname></link>
  も参照ください。
 </para> 
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
